name: Rust

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha[0-9]+'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --target ${{ matrix.target }}
    
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --target ${{ matrix.target }}
    
    - name: Package
      shell: bash
      run: |
        cd target/${{ matrix.target }}/release
        tar czvf ../../../hash_gen_${{ matrix.target }}.tar.gz hash_gen
        cd -
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: hash_gen_${{ matrix.target }}
        path: hash_gen_${{ matrix.target }}.*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          hash_gen_x86_64-unknown-linux-gnu/*
          hash_gen_x86_64-apple-darwin/*
